* Introduction
  This repository contains the model, implementation and
  automation scripts as per assignment given at [[http://wiki.polyglotit.com/index.php/Interview-assignment3][link]]
* Run code in development environment
** Pre requisites
   For successful running of this code following software
   pre requisites has to be installed
   
   - OS (GNU/Linux any Debian base OS (Ubuntu, Debian, Kubuntu, Edubuntu..etc))
   - emacs
     + Installation 
       #+BEGIN_EXAMPLE
       sudo apt-get update -y
       sudo apt-get install emacs -y
       #+END_EXAMPLE
   - Ansible > v1.x.x 
     + Installation
       #+BEGIN_EXAMPLE
       sudo apt-get install software-properties-common -y
       sudo apt-add-repository ppa:ansible/ansible
       sudo apt-get update -y
       sudo apt-get install ansible -y
       #+END_EXAMPLE
   - boto & boto3
     + Installation  
       #+BEGIN_EXAMPLE
       sudo apt-get install python-pip -y
       sudo pip install boto boto3
       #+END_EXAMPLE
   - AWS EC2 service provided =.pem= file to access the =EC2
     VM=
   - Git
     #+BEGIN_EXAMPLE
     sudo apt-get install git -y
     #+END_EXAMPLE

** Steps to run the code
   1) Clone the repository
      #+BEGIN_EXAMPLE
      git clone https://github.com/ksripathi/aws-assignment
      #+END_EXAMPLE
   2) Change directory to =aws-assignment=
      #+BEGIN_EXAMPLE
      cd aws-assignment
      #+END_EXAMPLE
   3) Run =make= command to tangle the =yml= code from =org=
      files. And argument =readtheorg=true= make the
      documentation in =sphinx= template
      #+BEGIN_EXAMPLE
      make readtheorg=true
      #+END_EXAMPLE
   4) Above step(3) creates =code= and =docs= folders inside
      =build= folder. =code= contains =yml= files whereas
      =docs= contains narration of the =yml= code in html
      with =sphinx= templates

   5) Above step(3) generates =implementation= folder under
      =build/code/= directory with following directory
      structure
      #+BEGIN_EXAMPLE
      ├── implementation
      │   ├── common_vars
      │   │   └── main.yml
      │   ├── deploy-ec2.yml
      │   ├── provision-vpc.yml
      │   └── roles
      │       ├── ec2
      │       │   └── tasks
      │       │       └── main.yml
      │       └── vpc
      │           ├── tasks
      │           │   └── main.yml
      │           └── vars
      │               └── main.yml
      └── VERSION


      #+END_EXAMPLE
   6) Change directory to =implementation= folder
      #+BEGIN_EXAMPLE
      cd build/code/implementation
      #+END_EXAMPLE
   7) Copy the obtained =.pem= key file to
      =build/code/implementation= directory
   8) Make sure that file =file.pem= has =400= permission
      set
      #+BEGIN_EXAMPLE
      chmod 400 file.pem
      #+END_EXAMPLE
   9) Configure the common variables in
      =common_vars/main.yml= file as below
      #+BEGIN_EXAMPLE
      keypair: polygot # pem key file name without .pem extension
      aws_access_key: place-key-here
      aws_secret_key: place-key-here
      aws_region: ap-south-1
      ami: ami-3c374c53
      instance_type: t2.micro

      #+END_EXAMPLE
   10) Run the following playbook to provision VPC and EC2 VM
       #+BEGIN_EXAMPLE
       $ ansible-playbook provision-vpc.yml 
       #+END_EXAMPLE
   11) Above step(10) does the following
       
       - creation of VPC in Mumbai region
         
       - creation public subnet inside VPC
         
       - creation private subnet inside VPC
         
       - adds gateway to VPC
         
       - adds routing table to gateway
         
       - creation of EC2 VM inside private VPC subnet

   12) Visit AWS EC2 dashboard and get the public ip and
       configure the following variables values at
       =build/code/implementation/inventory= file as below

       - Replace the variable =ansible_host= value from
         =127.0.0.1= to =Pubclic IP of EC2 VM=

       - Replace the variable =ansible_ssh_private_key_file=
         value from =file-name.pem= to =file.pem=

   13) Run the following playbook to deploy the web-app on
       AWS EC2 VM inside VPC private subnet
      #+BEGIN_EXAMPLE
      $ cd build/code/implementation
      $ ansible-playbook -i inventory deploy-ec2.yml
      #+END_EXAMPLE

   14) Access the web application from browser
       #+BEGIN_EXAMPLE
       firefox http://public-ip-of-ec2-vm/polyglot
       #+END_EXAMPLE
      






